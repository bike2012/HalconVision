<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.1" halcon_version="17.12">
<procedure name="main">
<interface/>
<body>
<c>*</c>
<l>dev_update_off ()</l>
<l>dev_close_window ()</l>
<l>read_image (Image, 'automotive/car_door_calib_plate')</l>
<l>get_image_size (Image, Width, Height)</l>
<l>dev_open_window_fit_size (0, 0, Width, Height, -1, -1, WindowHandle)</l>
<l>set_display_font (WindowHandle, 14, 'mono', 'true', 'false')</l>
<l>dev_display (Image)</l>
<c>**第一部分**</c>
<c>**计算标定板所在平面的位姿**</c>
<c>*标定板描述文件的名称</c>
<l>CalTabDescrName := 'caltab_200mm.descr'</l>
<c>*相机内参</c>
<l>gen_cam_par_area_scan_division (0.0160522, -402.331, 9.30632e-006, 9.3e-006, 315.431, 273.525, 640, 512, CameraParam)</l>
<c>*获取标定板的pose</c>
<l>caltab_points (CalTabDescrName, X, Y, Z)</l>
<l>find_caltab (Image, CalPlate, CalTabDescrName, 3, 112, 5)</l>
<c>*需要的是Pose这个参数</c>
<l>find_marks_and_pose (Image, CalPlate, CalTabDescrName, CameraParam, 128, 10, 18, 0.9, 15, 100, RCoord, CCoord, Pose)</l>
<l>gen_cross_contour_xld (Cross, RCoord, CCoord, 6, 0.785398)</l>
<c>*显示</c>
<l>dev_set_draw ('margin')</l>
<l>dev_set_line_width (1)</l>
<l>dev_set_color ('cyan')</l>
<l>dev_display (Cross)</l>
<l>dev_set_line_width (2)</l>
<l>dev_set_color ('green')</l>
<l>dev_display (CalPlate)</l>
<l>stop ()</l>
<c></c>
<c>**第二部分**</c>
<c>**创建模板**</c>
<l>read_image (Image, 'automotive/car_door_init_pose')</l>
<l>dev_display (Image)</l>
<l>read_region (ROI, 'automotive/car_door_region')</l>
<l>reduce_domain (Image, ROI, ImageReduced)</l>
<c></c>
<c>*设置初始Pose，在原位姿上减去标定板的厚度</c>
<l>set_origin_pose (Pose, 0, 0, 0.03, PoseNewOrigin)</l>
<c>*</c>
<l>create_planar_calib_deformable_model (ImageReduced, CameraParam, PoseNewOrigin, 'auto', -0.1, 0.2, 'auto', 0.6, 1, 'auto', 0.6, 1, 'auto', 'none', 'use_polarity', 'auto', 'auto', [], [], ModelID)</l>
<c>*</c>
<l>get_deformable_model_contours (ModelContours, ModelID, 1)</l>
<l>count_obj (ModelContours, NumberContour)</l>
<c>*</c>
<c>*显示模型的三维空间原点，</c>
<l>get_deformable_model_params (ModelID, 'model_pose', ModelPose)</l>
<l>dev_set_colored (3)</l>
<l>disp_message (WindowHandle, 'Calibrated Pose of Object\n X: ' + ModelPose[0]$'.4f' + ' m\n Y: ' + ModelPose[1]$'.4f' + ' m\n Z: ' + ModelPose[2]$'.4f' + ' m', 'window', 12, 12, 'black', 'true')</l>
<l>disp_3d_coord_system (WindowHandle, CameraParam, ModelPose, 0.15)</l>
<l>disp_continue_message (WindowHandle, 'black', 'true')</l>
<l>stop ()</l>
<c>**第三部分**</c>
<c></c>
<c>*在后续图像中找到车门的位姿</c>
<c>*生成矩形区域，用于裁剪图像，减小搜索范围</c>
<l>gen_rectangle1 (Rectangle2, 200, 50, 420, 620)</l>
<c></c>
<l>for Index := 1 to 20 by 1</l>
<l>    read_image (ImageSearch, 'automotive/car_door_' + Index$'.02')</l>
<c>    *通过剪裁图像缩小搜索范围，提高运行速度</c>
<l>    reduce_domain (ImageSearch, Rectangle2, ImageReducedSearch)</l>
<l>    dev_display (ImageSearch)</l>
<c>    *用于计算搜索时间</c>
<l>    count_seconds (Seconds1)</l>
<l>    find_planar_calib_deformable_model (ImageReducedSearch, ModelID, -0.1, 0.2, 0.6, 1.0, 0.6, 1.0, 0.7, 1, 1, 0, 0.7, [], [], Pose, CovPose, Score)</l>
<l>    count_seconds (Seconds2)</l>
<l>    Time := Seconds2 - Seconds1</l>
<c>    </c>
<c>    *显示检测结果</c>
<l>    for Index1 := 0 to |Score| - 1 by 1</l>
<c>        *选择相应的匹配结果</c>
<l>        tuple_select_range (Pose, Index1 * 7, ((Index1 + 1) * 7) - 1, PoseSelected)</l>
<c>        *将pose转换为矩阵形式</c>
<l>        pose_to_hom_mat3d (PoseSelected, HomMat3D)</l>
<c>        *使用其3D姿势构建检测到的模型的投影</c>
<l>        gen_empty_obj (FoundContour)</l>
<l>        for Index2 := 1 to NumberContour by 1</l>
<l>            select_obj (ModelContours, ObjectSelected, Index2)</l>
<l>            get_contour_xld (ObjectSelected, Y, X)</l>
<c>            *</c>
<l>            Z := gen_tuple_const(|X|,0.0)</l>
<c>            *</c>
<l>            affine_trans_point_3d (HomMat3D, X, Y, Z, Xc, Yc, Zc)</l>
<c>            *</c>
<l>            project_3d_point (Xc, Yc, Zc, CameraParam, R, C)</l>
<l>            gen_contour_polygon_xld (ModelWorld, R, C)</l>
<l>            concat_obj (FoundContour, ModelWorld, FoundContour)</l>
<l>        endfor</l>
<c>        * Display results</c>
<l>        disp_message (WindowHandle, 'Object found in ' + (Time * 1000)$'.4' + ' ms' + '\n X: ' + PoseSelected[0]$'.4f' + ' m\n Y: ' + PoseSelected[1]$'.4f' + ' m\n Z: ' + PoseSelected[2]$'.4f' + ' m', 'window', 12, 12, 'black', 'true')</l>
<l>        dev_set_color ('cyan')</l>
<l>        dev_display (FoundContour)</l>
<l>        dev_set_colored (3)</l>
<l>        disp_3d_coord_system (WindowHandle, CameraParam, PoseSelected, 0.15)</l>
<l>    endfor</l>
<c>    </c>
<l>    stop()</l>
<l>endfor</l>
<c>*</c>
<l>clear_deformable_model (ModelID)</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
